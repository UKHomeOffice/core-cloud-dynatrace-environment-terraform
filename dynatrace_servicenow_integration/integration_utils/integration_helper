#!/bin/bash

set -eu

# ----------------------------------------------------------------------
the_api_call(){
  local method="$1"
  local item_spec="$2"

  curl "https://core-cloud-test.live.dynatrace.com/api/v2/settings/${item_spec}" \
  -X ${method} \
  -H 'Accept: application/json; charset=utf-8' \
  -H 'Content-Type: application/json; charset=utf-8' \
  -H "Authorization: Api-Token ${DYNATRACE_API_TOKEN}"
}
# ----------------------------------------------------------------------
#servicenow_integration_through_api
json_content=$(the_api_call GET "objects?schemaIds=builtin%3Aproblem.notifications&scopes=environment&filter=value.displayName%20%3D%20%27${INTEGRATION_NAME}%27")
record_count=$(echo $json_content | jq '.totalCount')
echo $record_count
if [[ $record_count -gt 1 ]]; then
  echo "More than one resource found with the same name. Please check." >&2
  exit 1
elif [[ $record_count -eq 1 ]]; then
  export OBJECT_ID=$(echo $json_content | jq -r '.items[0].objectId' | xargs)
  if [[ $# -eq 1 && $1 == "delete" ]]; then
    echo "Deleting ${INTEGRATION_NAME}..."
    the_api_call DELETE "objects/${OBJECT_ID}"
  else # NOTE: In terraform this logic will never be true. Including here for completion.
    echo "Updating existing settings..."
    export OBJECT_UPDATE_TOKEN=$(the_api_call GET "objects/${OBJECT_ID}?adminAccess=false" | jq -r '.updateToken' | xargs)
    bash $(dirname $0)/update_integration
  fi
elif [[ $# -eq 0 ]]; then
  echo "Create new integration..."
  bash -x $(dirname $0)/create_integration
else
  echo "Unexpected args '$*'" >&2
  exit 1
fi
