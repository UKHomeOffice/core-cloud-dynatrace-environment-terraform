default_rules:
  asg:
    legacy_
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AUTO_SCALING_GROUP),tag([AWS]project-id:${project_id})
  alb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_APPLICATION_LOAD_BALANCER),tag([AWS]project-id:${project_id})
  nlb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_NETWORK_LOAD_BALANCER),tag([AWS]project-id:${project_id})
  ec2:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(EC2_INSTANCE),tag([AWS]project-id:${project_id})
  elb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(ELASTIC_LOAD_BALANCER),tag([AWS]project-id:${project_id})
  rds:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(RELATIONAL_DATABASE_SERVICE),tag([AWS]project-id:${project_id})
  custom:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(CUSTOM_DEVICE),tag([AWS]project-id:${project_id})
%{ if can(k8s_cluster_operator) != "" ~}
  k8s_clusters_name_type_clusters:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "KUBERNETES_CLUSTER"
      attribute_conditions:
        - key: "KUBERNETES_CLUSTER_NAME"
          operator: "${k8s_cluster_operator}"
          string_value: "${k8s_cluster_value}"
  k8s_node:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST"
      attribute_conditions:
        - key: "KUBERNETES_CLUSTER_NAME"
          operator: "${k8s_cluster_operator}"
          string_value: "${k8s_cluster_value}"
%{ endif ~}
  k8s_namespace:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "CLOUD_APPLICATION_NAMESPACE"
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
          case_sensitive: true
  k8s_pg:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "PROCESS_GROUP"
      pg_to_host_propagation: true
      pg_to_service_propagation: true
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
          case_sensitive: true
  k8s_workloads:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "CLOUD_APPLICATION"
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
  k8s_service:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "KUBERNETES_SERVICE"
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
  k8s_hostgroups:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST_GROUP"
      attribute_conditions:
        - key: "HOST_GROUP_NAME"
          operator: "BEGINS_WITH"
          string_value: "${host_prefix}"
          case_sensitive: true
  k8s_hosts:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST"
      host_to_pgpropagation: true
      attribute_conditions:
        - key: "HOST_GROUP_NAME"
          operator: "BEGINS_WITH"
          string_value: "${host_prefix}"
          case_sensitive: true
  include_web_apps:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "WEB_APPLICATION"
      attribute_conditions:
        - key: "WEB_APPLICATION_NAME"
          operator: "BEGINS_WITH"
          string_value: "${webapp_prefix}"
          case_sensitive: true
%{ if can(acc_id) != "" ~}
  exclude_account:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "AWS_ACCOUNT"
      attribute_conditions:
        - key: "AWS_acc_id"
          operator: "NOT_EQUALS"
          string_value: "${acc_id}"
          case_sensitive: true
  match_account:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "AWS_ACCOUNT"
      attribute_conditions:
        - key: "AWS_acc_id"
          operator: "EQUALS"
          string_value: "${acc_id}"
          case_sensitive: true
%{ endif ~}