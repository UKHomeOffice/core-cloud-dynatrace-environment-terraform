default_rules:
  asg:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AUTO_SCALING_GROUP),%{ if project_id != "" }tag([AWS]project-id:${project_id}%{ endif })%{ if service_id != "" },(tag[AWS]service-id:${service_id}%{endif})
  alb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_APPLICATION_LOAD_BALANCER),%{ if project_id != "" }tag([AWS]project-id:${project_id}%{ endif })%{ if service_id != "" },(tag[AWS]service-id:${service_id}%{endif})
  nlb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_NETWORK_LOAD_BALANCER),%{ if project_id != "" }tag([AWS]project-id:${project_id}%{ endif })%{ if service_id != "" },(tag[AWS]service-id:${service_id}%{endif})
  ec2:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(EC2_INSTANCE),%{ if project_id != "" }tag([AWS]project-id:${project_id}%{ endif })%{ if service_id != "" },(tag[AWS]service-id:${service_id}%{endif})
  elb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(ELASTIC_LOAD_BALANCER),%{ if project_id != "" }tag([AWS]project-id:${project_id}%{ endif })%{ if service_id != "" },(tag[AWS]service-id:${service_id}%{endif})
  rds:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(RELATIONAL_DATABASE_SERVICE),%{ if project_id != "" }tag([AWS]project-id:${project_id}%{ endif })%{ if service_id != "" },(tag[AWS]service-id:${service_id}%{endif})
  lambda:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_LAMBDA_FUNCTION),%{ if project_id != "" }tag([AWS]project-id:${project_id}%{ endif })%{ if service_id != "" },(tag[AWS]service-id:${service_id}%{endif})
  msk:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(CUSTOM_DEVICE),%{ if project_id != "" }tag([AWS]project-id:${project_id}%{ endif })%{ if service_id != "" },(tag[AWS]service-id:${service_id}%{endif})
  custom:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(CUSTOM_DEVICE),%{ if project_id != "" }tag([AWS]project-id:${project_id}%{ endif })%{ if service_id != "" },(tag[AWS]service-id:${service_id}%{endif})
  application:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(APPLICATION),tag([AWS]service-id:${service_id}%{ if project_service != "" },PROJECT-SERVICE:${project_service}%{endif})
  host:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(HOST),tag([AWS]service-id:${service_id}%{ if project_service != "" },PROJECT-SERVICE:${project_service}%{endif})
  service:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(SERVICE),tag([AWS]service-id:${service_id}%{ if project_service != "" },PROJECT-SERVICE:${project_service}%{endif})
  k8s_filters:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(CLOUD_APPLICATION),%{ if project_id != "" }tag([KUBERNETES]project-id:${project_id}%{ endif })
  exclude_asg:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AUTO_SCALING_GROUP),not(tag([AWS]dynatrace-all:false))
  exclude_alb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_APPLICATION_LOAD_BALANCER),not(tag([AWS]dynatrace-all:false))
  exclude_nlb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_NETWORK_LOAD_BALANCER),not(tag([AWS]dynatrace-all:false))
  exclude_ec2:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(EC2_INSTANCE),not(tag([AWS]dynatrace-all:false))
  exclude_elb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(ELASTIC_LOAD_BALANCER),not(tag([AWS]dynatrace-all:false))
  exclude_rds:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(RELATIONAL_DATABASE_SERVICE),not(tag([AWS]dynatrace-all:false))
  exclude_custom:
    type: "SELECTOR"
    enabled: true
    entity_selector: type("CUSTOM_DEVICE"),not(tag([AWS]dynatrace-all:false))
  asg_with_envtags:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AUTO_SCALING_GROUP)%{ if project_id != "" },tag([AWS]project-id:${project_id})%{ endif }%{ if tag_env_name != "" },tag([AWS]environment-type:${tag_env_name})%{ endif }
  alb_with_envtags:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_APPLICATION_LOAD_BALANCER)%{ if project_id != "" },tag([AWS]project-id:${project_id})%{ endif }%{ if tag_env_name != "" },tag([AWS]environment-type:${tag_env_name})%{ endif }
  nlb_with_envtags:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_NETWORK_LOAD_BALANCER)%{ if project_id != "" },tag([AWS]project-id:${project_id})%{ endif }%{ if tag_env_name != "" },tag([AWS]environment-type:${tag_env_name})%{ endif }
  ec2_with_envtags:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(EC2_INSTANCE)%{ if project_id != "" },tag([AWS]project-id:${project_id})%{ endif }%{ if tag_env_name != "" },tag([AWS]environment-type:${tag_env_name})%{ endif }
    entity_selector = "type(EC2_INSTANCE),tag([AWS]project-id:apa),tag([AWS]environment-type:prod)"
    type: "SELECTOR"
    enabled: true
    entity_selector: type(ELASTIC_LOAD_BALANCER)%{ if project_id != "" },tag([AWS]project-id:${project_id})%{ endif }%{ if tag_env_name != "" },tag([AWS]environment-type:${tag_env_name})%{ endif }
  rds_with_envtags:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(RELATIONAL_DATABASE_SERVICE)%{ if project_id != "" },tag([AWS]project-id:${project_id})%{ endif }%{ if tag_env_name != "" },tag([AWS]environment-type:${tag_env_name})%{ endif }
  custom_with_envtags:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(CUSTOM_DEVICE)%{ if project_id != "" },tag([AWS]project-id:${project_id})%{ endif }%{ if tag_env_name != "" },tag([AWS]environment-type:${tag_env_name})%{ endif }
  match:
    type: "SELECTOR"
    enabled: true
    entity_selector: "type(host),entityName.StartsWith(da-ec2-mtca)"
  k8s_clusters_name_type_clusters:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "KUBERNETES_CLUSTER"
      attribute_conditions:
        - key: "KUBERNETES_CLUSTER_NAME"
          operator: "BEGINS_WITH"
          string_value: "${k8s_cluster_name_begins_with}"
%{ if env_name != ""  ~}
        - key: "KUBERNETES_CLUSTER_NAME"
          operator: "CONTAINS"
          string_value: "${env_name}"
%{ endif ~}
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  # k8s_clusters_name_type_clusters_exists:
  #       type: "ME"
  #       enabled: true
  #       attribute_rule:
  #         entity_type: "KUBERNETES_CLUSTER"
  #         attribute_conditions:
  #           - key: "KUBERNETES_CLUSTER_NAME"
  #             operator: "EXISTS"
  k8s_node:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST"
      attribute_conditions:
        - key: "KUBERNETES_CLUSTER_NAME"
          operator: "BEGINS_WITH"
          string_value: "${k8s_cluster_name_begins_with}"
%{ if env_name != ""  ~}
        - key: "KUBERNETES_CLUSTER_NAME"
          operator: "CONTAINS"
          string_value: "${env_name}"
%{ endif ~}
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
 # k8s_node_exists:
 #   type: "ME"
 #   enabled: true
 #   attribute_rule:
 #     entity_type: "HOST"
 #     attribute_conditions:
 #      - key: "KUBERNETES_CLUSTER_NAME"
 #         operator: "EXISTS"
  k8s_namespace:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "CLOUD_APPLICATION_NAMESPACE"
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
          case_sensitive: true
%{ if env_name != ""  ~}
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "environment-type"
          operator: "EQUALS"
          string_value: "${env_name}"
          case_sensitive: true
%{ endif ~}
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_pg:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "PROCESS_GROUP"
      pg_to_host_propagation: true
      pg_to_service_propagation: true
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
          case_sensitive: true
%{ if env_name != ""  ~}
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "environment-type"
          operator: "EQUALS"
          string_value: "${env_name}"
          case_sensitive: true
%{ endif ~}
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_pg_predefined_metadata_equals:
        type: "ME"
        enabled: true
        attribute_rule:
          entity_type: "PROCESS_GROUP"
          attribute_conditions:
            - key: "PROCESS_GROUP_PREDEFINED_METADATA"
              dynamic_key: "KUBERNETES_NAMESPACE"
              operator: "EQUALS"
              string_value: "${k8s_namespace}"
              case_sensitive: true
          pg_to_host_propagation: true
          pg_to_service_propagation: true
  k8s_pg_predefined_metadata_beginswith:
      type: "ME"
      enabled: true
      attribute_rule:
        entity_type: "PROCESS_GROUP"
        attribute_conditions:
          - key: "PROCESS_GROUP_PREDEFINED_METADATA"
            dynamic_key: "KUBERNETES_NAMESPACE"
            operator: "BEGINS_WITH"
            string_value: "${k8s_namespace}"
            case_sensitive: true
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
        pg_to_host_propagation: ${pg_to_host_propagation}
        pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_workloads:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "CLOUD_APPLICATION"
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
%{ if env_name != ""  ~}
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "environment-type"
          operator: "EQUALS"
          string_value: "${env_name}"
          case_sensitive: true
%{ endif ~}
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_service:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "KUBERNETES_SERVICE"
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
%{ if env_name != ""  ~}
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "environment-type"
          operator: "EQUALS"
          string_value: "${env_name}"
          case_sensitive: true
%{ endif ~}
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_hostgroups:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST_GROUP"
      attribute_conditions:
        - key: "HOST_GROUP_NAME"
          operator: "BEGINS_WITH"
          string_value: "${host_group_begins_with}"
          case_sensitive: true
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_hosts:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST"
      host_to_pgpropagation: true
      attribute_conditions:
        - key: "HOST_GROUP_NAME"
          operator: "BEGINS_WITH"
          string_value: "${host_group_begins_with}"
          case_sensitive: true
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  include_web_apps:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "WEB_APPLICATION"
      attribute_conditions:
        - key: "WEB_APPLICATION_NAME"
          operator: "BEGINS_WITH"
          string_value: "${webapp_prefix}"
          case_sensitive: true
%{ if env_name != ""  ~}
        - key: "WEB_APPLICATION_NAME"
          operator: "CONTAINS"
          string_value: "${env_name}"
          case_sensitive: true
%{ endif ~}
%{ if can(aws_account_id) != "" ~}
  exclude_account:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "AWS_ACCOUNT"
      attribute_conditions:
        - key: "AWS_ACCOUNT_ID"
          operator: "NOT_EQUALS"
          string_value: "${aws_account_id}"
          case_sensitive: true
  match_account:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "AWS_ACCOUNT"
      attribute_conditions:
        - key: "AWS_ACCOUNT_ID"
          operator: "EQUALS"
          string_value: "${aws_account_id}"
          case_sensitive: true
  aws_account:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "AWS_ACCOUNT"
      attribute_conditions:
        - key: "AWS_ACCOUNT_ID"
          operator: "EQUALS"
          string_value: "${aws_account_id}"
          case_sensitive: true
%{ endif ~}
  