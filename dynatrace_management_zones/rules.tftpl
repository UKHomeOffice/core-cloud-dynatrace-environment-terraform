default_rules:
  asg:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AUTO_SCALING_GROUP),%{ if tag_name != "" } tag([AWS]${tag_name}:${tag_value},%{ endif } %{ if service_id != "" } [AWS]service-id:${service_id} %{ endif })
  alb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_APPLICATION_LOAD_BALANCER),%{ if tag_name != "" } tag([AWS]${tag_name}:${tag_value},%{ endif } %{ if service_id != "" } [AWS]service-id:${service_id} %{ endif })
  nlb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_NETWORK_LOAD_BALANCER),%{ if tag_name != "" } tag([AWS]${tag_name}:${tag_value},%{ endif } %{ if service_id != "" } [AWS]service-id:${service_id} %{ endif })
  ec2:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(EC2_INSTANCE),%{ if tag_name != "" } tag([AWS]${tag_name}:${tag_value},%{ endif } %{ if service_id != "" } [AWS]service-id:${service_id} %{ endif })
  elb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(ELASTIC_LOAD_BALANCER),%{ if tag_name != "" } tag([AWS]${tag_name}:${tag_value},%{ endif } %{ if service_id != "" } [AWS]service-id:${service_id} %{ endif })
  rds:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(RELATIONAL_DATABASE_SERVICE),%{ if tag_name != "" } tag([AWS]${tag_name}:${tag_value},%{ endif } %{ if service_id != "" } [AWS]service-id:${service_id} %{ endif })
  custom:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(CUSTOM_DEVICE),%{ if tag_name != "" } tag([AWS]${tag_name}:${tag_value},%{ endif } %{ if service_id != "" } [AWS]service-id:${service_id} %{ endif })
  application:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(APPLICATION),tag([AWS]service-id:${service_id})
  host:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(HOST),tag([AWS]service-id:${service_id})
  service:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(HOST),tag([AWS]service-id:${service_id})
  K8s_filters:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(CLOUD_APPLICATION),%{ if tag_name != "" } tag([KUBERNETES]${tag_name}:${tag_value},%{ endif })
  K8s_node_short_version:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(KUBERNETES_NODE),toRelationships.isClusterOfNode(type(KUBERNETES_CLUSTER),entityName.in("${k8s_cluster_name}"))
  exclude_asg:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AUTO_SCALING_GROUP),not(tag([AWS]dynatrace-all:false))
  exclude_alb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_APPLICATION_LOAD_BALANCER),not(tag([AWS]dynatrace-all:false))
  exclude_nlb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_NETWORK_LOAD_BALANCER),not(tag([AWS]dynatrace-all:false))
  exclude_ec2:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(EC2_INSTANCE),not(tag([AWS]dynatrace-all:false))
  exclude_elb:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(ELASTIC_LOAD_BALANCER),not(tag([AWS]dynatrace-all:false))
  exclude_rds:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(RELATIONAL_DATABASE_SERVICE),not(tag([AWS]dynatrace-all:false))
  exclude_custom:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(CUSTOM_DEVICE),not(tag([AWS]dynatrace-all:false))
  asg_notprod:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AUTO_SCALING_GROUP),tag([AWS]project-id:apa),tag([AWS]environment-type:notprod)
  alb_notprod:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_APPLICATION_LOAD_BALANCER),tag([AWS]project-id:apa),tag([AWS]environment-type:notprod)
  nlb_notprod:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(AWS_NETWORK_LOAD_BALANCER),tag([AWS]project-id:apa),tag([AWS]environment-type:notprod)
  ec2_notprod:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(EC2_INSTANCE),tag([AWS]project-id:apa),tag([AWS]environment-type:notprod)
  elb_notprod:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(ELASTIC_LOAD_BALANCER),tag([AWS]project-id:apa),tag([AWS]environment-type:notprod)
  rds_notprod:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(RELATIONAL_DATABASE_SERVICE),tag([AWS]project-id:apa),tag([AWS]environment-type:notprod)
  custom_notprod:
    type: "SELECTOR"
    enabled: true
    entity_selector: type(CUSTOM_DEVICE),tag([AWS]project-id:apa),tag([AWS]environment-type:notprod)
  k8s_clusters_name_type_clusters_begins_with:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "KUBERNETES_CLUSTER"
      attribute_conditions:
        - key: "KUBERNETES_CLUSTER_NAME"
          operator: "BEGINS_WITH"
          string_value: "${k8s_cluster_name_begins_with}"
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_clusters_name_type_clusters_exists:
        type: "ME"
        enabled: true
        attribute_rule:
          entity_type: "KUBERNETES_CLUSTER"
          attribute_conditions:
            - key: "KUBERNETES_CLUSTER_NAME"
              operator: "EXISTS"
  k8s_node:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST"
      attribute_conditions:
        - key: "KUBERNETES_CLUSTER_NAME"
          operator: "BEGINS_WITH"
          string_value: "${k8s_cluster_name_begins_with}"
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_node_exists:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST"
      attribute_conditions:
        - key: "KUBERNETES_CLUSTER_NAME"
          operator: "EXISTS"
  k8s_namespace:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "CLOUD_APPLICATION_NAMESPACE"
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
          case_sensitive: true
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_pg:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "PROCESS_GROUP"
      pg_to_host_propagation: true
      pg_to_service_propagation: true
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
          case_sensitive: true
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_workloads:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "CLOUD_APPLICATION"
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_service:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "KUBERNETES_SERVICE"
      attribute_conditions:
        - key: "CLOUD_APPLICATION_NAMESPACE_LABELS"
          dynamic_key: "project-id"
          operator: "EQUALS"
          string_value: "${project_id}"
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_hostgroups:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST_GROUP"
      attribute_conditions:
        - key: "HOST_GROUP_NAME"
          operator: "BEGINS_WITH"
          string_value: "${host_group_begins_with}"
          case_sensitive: true
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  k8s_hosts:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "HOST"
      host_to_pgpropagation: true
      attribute_conditions:
        - key: "HOST_GROUP_NAME"
          operator: "BEGINS_WITH"
          string_value: "${host_group_begins_with}"
          case_sensitive: true
%{ if pg_to_host_propagation && pg_to_service_propagation ~}
      pg_to_host_propagation: ${pg_to_host_propagation}
      pg_to_service_propagation: ${pg_to_service_propagation}
%{ endif ~}
  include_web_apps:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "WEB_APPLICATION"
      attribute_conditions:
        - key: "WEB_APPLICATION_NAME"
          operator: "BEGINS_WITH"
          string_value: "${webapp_prefix}"
          case_sensitive: true
%{ if can(aws_account_id) != "" ~}
  exclude_account:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "AWS_ACCOUNT"
      attribute_conditions:
        - key: "AWS_ACCOUNT_ID"
          operator: "NOT_EQUALS"
          string_value: "${aws_account_id}"
          case_sensitive: true
  match_account:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "AWS_ACCOUNT"
      attribute_conditions:
        - key: "AWS_ACCOUNT_ID"
          operator: "EQUALS"
          string_value: "${aws_account_id}"
          case_sensitive: true
  staticsite:
    type: "ME"
    enabled: true
    attribute_rule:
      entity_type: "AWS_ACCOUNT"
      attribute_conditions:
        - key: "AWS_ACCOUNT_ID"
          operator: "EQUALS"
          string_value: "${aws_account_id}"
          case_sensitive: true
%{ endif ~}
  